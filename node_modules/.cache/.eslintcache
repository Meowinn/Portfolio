[{"/home/equinox/repos/Portfolio_v1.2/src/index.js":"1","/home/equinox/repos/Portfolio_v1.2/src/App.js":"2","/home/equinox/repos/Portfolio_v1.2/src/components/home.js":"3","/home/equinox/repos/Portfolio_v1.2/src/components/skills.js":"4","/home/equinox/repos/Portfolio_v1.2/src/components/project.js":"5","/home/equinox/repos/Portfolio_v1.2/src/components/contact.js":"6"},{"size":255,"mtime":1677729569811,"results":"7","hashOfConfig":"8"},{"size":413,"mtime":1678422092490,"results":"9","hashOfConfig":"8"},{"size":3571,"mtime":1678180014057,"results":"10","hashOfConfig":"8"},{"size":2429,"mtime":1678161262841,"results":"11","hashOfConfig":"8"},{"size":8105,"mtime":1678758204056,"results":"12","hashOfConfig":"8"},{"size":2055,"mtime":1678178678501,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1h1phj8",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/home/equinox/repos/Portfolio_v1.2/src/index.js",[],[],[],"/home/equinox/repos/Portfolio_v1.2/src/App.js",[],[],"/home/equinox/repos/Portfolio_v1.2/src/components/home.js",["34"],[],"import React, { useState } from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport 'animate.css';\nimport SkillSection from \"./skills\";\nimport ProjectSection from \"./project\";\nimport ContactSection from \"./contact\";\n\nconst Home = () => {\n\n    const [themeIcon, setThemeIcon] = useState(\"â˜€\");\n\n    function themeToggle() {\n        let icon = document.querySelector('.themeToggle');\n        let animateBg = document.querySelector('.animateBg');\n\n        if (icon.innerText == 'â˜€') {\n            animateBg.style.setProperty('--lightAnimate', 'linear-gradient(to bottom, skyblue, cornflowerblue)')\n            document.body.classList.toggle(\"lightTheme\");\n            setThemeIcon(\n                'ðŸŒ™'\n            )\n        } else {\n            animateBg.style.setProperty('--lightAnimate', 'linear-gradient(to bottom, #223847, #111e27)')\n            document.body.classList.toggle(\"lightTheme\");\n            setThemeIcon(\n                'â˜€'\n            )\n        };\n    };\n\n    return (\n        <div id=\"home\">\n\n            <div className=\"animateBg\">\n                <div id=\"header\">\n                    <nav>\n                        <ul className=\"headerLists\">\n                            <li className=\"themeToggle\" onClick={themeToggle}>{themeIcon}</li>\n                            <li><HashLink smooth to='#skillsSection'> <span className=\"headerEmphasis\">Skills</span></HashLink></li>\n                            <li><HashLink smooth to='#projectSection'> <span className=\"headerEmphasis\">Projects</span></HashLink></li>\n                            <li><HashLink smooth to='#contactSection'> <span className=\"headerEmphasis\">Contact</span></HashLink></li>\n                        </ul>\n                    </nav>\n                </div>\n                <div id=\"startWrapper\" >\n                    <div className=\"startText\">\n                        <div >Hi, I'm Darwin | <span className=\"positionText\">Front-End</span> <br /><span className=\"positionText\">Developer</span></div>\n                        <div className=\"iconRow\">\n                            <a href=\"https://github.com/Meowinn\" className=\"startIconLink\"><img className=\"startIcons\" src={require('../imgs/github.png')} alt=\"gitHub_logo\"></img></a>\n                            <a href=\"https://www.linkedin.com/\" className=\"startIconLink\"><img className=\"startIcons\" src={require('../imgs/linkedin-logo.png')} alt='linkedin_logo'></img></a>\n                            <a href=\"mailto:darwinfagarang@gmail.com\" className=\"startIconLink\"><img className=\"startIcons\" src={require('../imgs/gmail-logo.png')} alt='gmail_logo'></img></a>\n                        </div>\n                        <div className=\"aboutText\">I love building and designing. I'm a life-long learner and I might have a thing for shawarma</div>\n                        <a href=\"https://drive.google.com/u/0/uc?id=1Dx967Kpx3Y_DQqypyoy7NtBabntlm4nP&export=download\"><button className=\"dlBtn\" type=\"button\">Download CV</button></a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"cloudContainer\">\n                <div className=\"cloud one\"></div>\n                <div className=\"cloud two\"></div>\n                <div className=\"cloud three\"></div>\n                <div className=\"cloud four\"></div>\n                <div className=\"cloud five\"></div>\n                <div className=\"cloud six\"></div>\n            </div>\n\n            <SkillSection />\n            <ProjectSection />\n            <ContactSection />\n\n        </div>\n    )\n};\n\n\nexport default Home;","/home/equinox/repos/Portfolio_v1.2/src/components/skills.js",[],[],"/home/equinox/repos/Portfolio_v1.2/src/components/project.js",[],[],"/home/equinox/repos/Portfolio_v1.2/src/components/contact.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":16,"column":28,"nodeType":"37","messageId":"38","endLine":16,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]